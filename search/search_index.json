{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442","text":"<p>\u0410\u0432\u0442\u043e\u0440: \u041c\u0438\u0442\u0440\u044f\u0448\u043a\u0438\u043d\u0430 \u0414\u0430\u0440\u044c\u044f</p>"},{"location":"#_1","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI</li> </ul>"},{"location":"lab1/connections/","title":"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0411\u0414","text":"<pre><code>from sqlmodel import SQLModel\nfrom sqlalchemy.ext.asyncio import AsyncSession, create_async_engine\nfrom sqlalchemy.orm import sessionmaker\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\ndb_url = os.getenv('DB_ADMIN')\nengine = create_async_engine(db_url, echo=True)\n\nasync_session = sessionmaker(\n    engine, class_=AsyncSession, expire_on_commit=False\n)\n\nasync def init_db():\n    async with engine.begin() as conn:\n        await conn.run_sync(SQLModel.metadata.create_all)\n\nasync def get_session():\n    async with async_session() as session:\n        yield session\n\nasync def close_db():\n    await engine.dispose()\n</code></pre>"},{"location":"lab1/models/","title":"\u041c\u043e\u0434\u0435\u043b\u0438 \u0411\u0414","text":""},{"location":"lab1/models/#erd-postgresql","title":"ERD \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 PostgreSQL","text":""},{"location":"lab1/models/#user","title":"User","text":"<pre><code>class UserDefault(SQLModel):\n    name: str\n    email: str\n\nclass User(UserDefault, table=True):\n    id: Optional[int] = Field(default=None, primary_key=True, sa_column_kwargs={\"autoincrement\": True})\n    tasks: List[\"Task\"] = Relationship(back_populates=\"user\")\n    hashed_password: str\n</code></pre>"},{"location":"lab1/models/#category","title":"Category","text":"<pre><code>class CategoryDefault(SQLModel):\n    name: str\n\nclass Category(CategoryDefault, table=True):\n    id: Optional[int] = Field(default=None, primary_key=True, sa_column_kwargs={\"autoincrement\": True})\n    name: str\n    tasks: List[\"Task\"] = Relationship(back_populates=\"categories\", link_model=TaskCategory)\n</code></pre>"},{"location":"lab1/models/#taskcategory","title":"TaskCategory","text":"<pre><code>class TaskCategory(SQLModel, table=True):\n    task_id: int = Field(foreign_key=\"task.id\", primary_key=True)\n    category_id: int = Field(foreign_key=\"category.id\", primary_key=True)\n</code></pre>"},{"location":"lab1/models/#task","title":"Task","text":"<pre><code>class TaskDefault(SQLModel):\n    title: str\n    description: Optional[str] = None\n    due_date: Optional[datetime] = Field(default=None, sa_column=Column(DateTime(timezone=True)))\n    scheduled_datetime: Optional[datetime] = Field(default=None, sa_column=Column(DateTime(timezone=True)))\n    priority: Priority = Priority.medium\n\nclass Task(TaskDefault, table=True):\n    id: Optional[int] = Field(default=None, primary_key=True, sa_column_kwargs={\"autoincrement\": True})\n    user_id: int = Field(foreign_key=\"user.id\")\n    user: User = Relationship(back_populates=\"tasks\")\n    categories: List[Category] = Relationship(back_populates=\"tasks\", link_model=TaskCategory)\n    time_logs: List[\"TaskTimeLog\"] = Relationship(back_populates=\"task\")\n</code></pre>"},{"location":"lab1/models/#tasktimelog","title":"TaskTimeLog","text":"<pre><code>class TaskTimeLogDefault(SQLModel):\n    start_time: datetime = Field(sa_column=Column(DateTime(timezone=True)))\n    end_time: Optional[datetime] = Field(default=datetime.now().astimezone(tz), sa_column=Column(DateTime(timezone=True)))\n\nclass TaskTimeLog(TaskTimeLogDefault, table=True):\n    id: Optional[int] = Field(default=None, primary_key=True, sa_column_kwargs={\"autoincrement\": True})\n    task_id: int = Field(foreign_key=\"task.id\")\n    task: Task = Relationship(back_populates=\"time_logs\")\n    time_spent: float\n</code></pre>"},{"location":"lab1/api/category/","title":"Categories","text":""},{"location":"lab1/api/category/#create-category","title":"Create Category","text":"<p>Endpoint: <code>POST /categories/</code></p> <p>Request Body:</p> <pre><code>{\n  \"name\": \"string\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"name\": \"string\",\n    \"id\": 0\n  }\n}\n</code></pre>"},{"location":"lab1/api/category/#get-categories","title":"Get Categories","text":"<p>Endpoint: <code>GET /categories/</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"id\": 0\n    }\n  ]\n}\n</code></pre>"},{"location":"lab1/api/category/#get-category","title":"Get Category","text":"<p>Endpoint: <code>GET /categories/{category_id}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"name\": \"string\",\n    \"id\": 0\n  }\n}\n</code></pre>"},{"location":"lab1/api/category/#update-category","title":"Update Category","text":"<p>Endpoint: <code>PUT /categories/{category_id}</code></p> <p>Request Body:</p> <pre><code>{\n  \"name\": \"string\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"name\": \"string\",\n    \"id\": 0\n  }\n}\n</code></pre>"},{"location":"lab1/api/category/#delete-category","title":"Delete Category","text":"<p>Endpoint: <code>DELETE /categories/{category_id}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"message\": \"string\"\n}\n</code></pre>"},{"location":"lab1/api/task/","title":"Tasks","text":""},{"location":"lab1/api/task/#create-task","title":"Create Task","text":"<p>Endpoint: <code>POST /tasks/</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Request Body:</p> <pre><code>{\n  \"title\": \"string\",\n  \"description\": \"string\", //optional\n  \"due_date\": \"2025-03-13T11:18:31.195Z\", //optional\n  \"scheduled_datetime\": \"2025-03-13T11:18:31.195Z\", //optional\n  \"priority\": 2,\n  \"category_ids\": [1, 2]\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"title\": \"string\",\n    \"description\": \"string\",\n    \"due_date\": \"2025-03-13T11:20:34.732Z\",\n    \"scheduled_datetime\": \"2025-03-13T11:20:34.732Z\",\n    \"priority\": 1,\n    \"id\": 0,\n    \"categories\": [\n      {\n        \"name\": \"string\",\n        \"id\": 0\n      }\n    ],\n    \"time_logs\": [\n      {\n        \"start_time\": \"2025-03-13T11:20:34.732Z\",\n        \"end_time\": \"2025-03-13T11:20:23.980852Z\",\n        \"id\": 0,\n        \"task_id\": 0,\n        \"time_spent\": 0\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"lab1/api/task/#get-tasks","title":"Get Tasks","text":"<p>Endpoint: <code>GET /tasks</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": [\n    {\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"due_date\": \"2025-03-13T11:24:34.052Z\",\n      \"scheduled_datetime\": \"2025-03-13T11:24:34.052Z\",\n      \"priority\": 1,\n      \"id\": 0,\n      \"categories\": [\n        {\n          \"name\": \"string\",\n          \"id\": 0\n        }\n      ],\n      \"time_logs\": [\n        {\n          \"start_time\": \"2025-03-13T11:24:34.052Z\",\n          \"end_time\": \"2025-03-13T11:20:23.980852Z\",\n          \"id\": 0,\n          \"task_id\": 0,\n          \"time_spent\": 0\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"lab1/api/task/#get-task","title":"Get Task","text":"<p>Endpoint: <code>GET /tasks/{task_id}</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"title\": \"string\",\n    \"description\": \"string\",\n    \"due_date\": \"2025-03-13T11:23:25.221Z\",\n    \"scheduled_datetime\": \"2025-03-13T11:23:25.221Z\",\n    \"priority\": 1,\n    \"id\": 0,\n    \"categories\": [\n      {\n        \"name\": \"string\",\n        \"id\": 0\n      }\n    ],\n    \"time_logs\": [\n      {\n        \"start_time\": \"2025-03-13T11:23:25.221Z\",\n        \"end_time\": \"2025-03-13T11:20:23.980852Z\",\n        \"id\": 0,\n        \"task_id\": 0,\n        \"time_spent\": 0\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"lab1/api/task/#update-task","title":"Update Task","text":"<p>Endpoint: <code>PUT /tasks/{task_id}</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Request Body:</p> <pre><code>{\n  \"title\": \"string\", //optional\n  \"description\": \"string\", //optional\n  \"due_date\": \"2025-03-13T11:25:46.760Z\", //optional\n  \"scheduled_datetime\": \"2025-03-13T11:25:46.760Z\", //optional\n  \"priority\": 2, //optional\n  \"category_ids\": [1, 2] //optional\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"message\": \"string\"\n}\n</code></pre>"},{"location":"lab1/api/task/#delete-task","title":"Delete Task","text":"<p>Endpoint: <code>DELETE /tasks/{task_id}</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"message\": \"string\"\n}\n</code></pre>"},{"location":"lab1/api/tasktimelog/","title":"Task Time Logs","text":""},{"location":"lab1/api/tasktimelog/#create-task-time-log","title":"Create Task Time Log","text":"<p>Endpoint: <code>POST /tasks/{task_id}/time_logs</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Request Body:</p> <pre><code>{\n  \"start_time\": \"2025-03-14T10:04:38.111Z\",\n  \"end_time\": \"2025-03-14T10:00:58.751272Z\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"start_time\": \"2025-03-14T10:04:38.112Z\",\n    \"end_time\": \"2025-03-14T10:00:58.751272Z\",\n    \"id\": 0,\n    \"task_id\": 0,\n    \"time_spent\": 0\n  }\n}\n</code></pre>"},{"location":"lab1/api/tasktimelog/#update-task-time-log","title":"Update Task Time Log","text":"<p>Endpoint: <code>PUT /tasks/{task_id}/time_logs/{time_log_id}</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Request Body:</p> <pre><code>{\n  \"start_time\": \"2025-03-14T10:06:33.980Z\",\n  \"end_time\": \"2025-03-14T10:00:58.751272Z\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"start_time\": \"2025-03-14T10:04:38.112Z\",\n    \"end_time\": \"2025-03-14T10:00:58.751272Z\",\n    \"id\": 0,\n    \"task_id\": 0,\n    \"time_spent\": 0\n  }\n}\n</code></pre>"},{"location":"lab1/api/tasktimelog/#delete-task-time-log","title":"Delete Task Time Log","text":"<p>Endpoint: <code>DELETE /tasks/{task_id}/time_logs/{time_log_id}</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"message\": \"string\"\n}\n</code></pre>"},{"location":"lab1/api/user/","title":"Users","text":""},{"location":"lab1/api/user/#login-user","title":"Login User","text":"<p>Endpoint: <code>POST /login</code></p> <p>Request Body:</p> <pre><code>{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"access_token\": \"string\",\n  \"token_type\": \"bearer\"\n}\n</code></pre>"},{"location":"lab1/api/user/#register-user","title":"Register User","text":"<p>Endpoint: <code>POST /register</code></p> <p>Request Body:</p> <pre><code>{\n  \"name\": \"string\",\n  \"email\": \"string\",\n  \"password\": \"string\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"id\": 0,\n    \"hashed_password\": \"string\"\n  }\n}\n</code></pre>"},{"location":"lab1/api/user/#change-password","title":"Change Password","text":"<p>Endpoint: <code>PUT /change_password</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Request Body:</p> <pre><code>{\n  \"old_password\": \"string\",\n  \"new_password\": \"string\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"message\": \"string\"\n}\n</code></pre>"},{"location":"lab1/api/user/#get-user-info","title":"Get User Info","text":"<p>Endpoint: <code>GET /users/me</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 0,\n  \"data\": {\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"id\": 0,\n    \"hashed_password\": \"string\"\n  }\n}\n</code></pre>"},{"location":"lab1/api/user/#update-user","title":"Update User","text":"<p>Endpoint: <code>PUT /users/me</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Request Body:</p> <pre><code>{\n  \"name\": \"string\",\n  \"email\": \"string\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"id\": 0,\n    \"hashed_password\": \"string\"\n  }\n}\n</code></pre>"},{"location":"lab1/api/user/#delete-user","title":"Delete User","text":"<p>Endpoint: <code>DELETE /users/me</code></p> <p>Authorization: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>Bearer Token</code>. \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0432 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0435: <code>Authorization: Bearer {access_token}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"message\": \"string\"\n}\n</code></pre>"},{"location":"lab1/api/user/#get-users","title":"Get Users","text":"<p>Endpoint: <code>GET /users</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 0,\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"id\": 0,\n      \"hashed_password\": \"string\"\n    }\n  ]\n}\n</code></pre>"},{"location":"lab1/api/user/#get-user","title":"Get User","text":"<p>Endpoint: <code>GET /users/{user_id}</code></p> <p>Response:</p> <pre><code>{\n  \"status\": 200,\n  \"data\": {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"id\": 0,\n      \"hashed_password\": \"string\"\n    }\n}\n</code></pre>"}]}